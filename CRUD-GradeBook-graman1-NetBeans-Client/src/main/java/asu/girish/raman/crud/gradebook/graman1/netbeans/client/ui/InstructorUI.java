package asu.girish.raman.crud.gradebook.graman1.netbeans.client.ui;

import asu.girish.raman.crud.gradebook.graman1.netbeans.client.AppealsClient;
import asu.girish.raman.crud.gradebook.graman1.netbeans.client.GradingItemsClient;
import asu.girish.raman.crud.gradebook.graman1.netbeans.client.StudentProfilesClient;
import com.sun.jersey.api.client.ClientResponse;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Girish
 */
public class InstructorUI extends javax.swing.JFrame {

    /**
     * Creates new form InstructorUI
     */
    public InstructorUI() {
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradeStuffPanel = new javax.swing.JTabbedPane();
        manageStudentsProfilePanel = new javax.swing.JPanel();
        RSStudentID = new javax.swing.JTabbedPane();
        profileC = new javax.swing.JPanel();
        CSStudentsName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CSCreateStudent = new javax.swing.JButton();
        profileR = new javax.swing.JPanel();
        RSViewStudent = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        VPStudentID = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        MSPViewAllProfiles = new javax.swing.JButton();
        profileU = new javax.swing.JPanel();
        USUpdateStudent = new javax.swing.JButton();
        UPStudentName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        UPStudentID = new javax.swing.JComboBox<>();
        profileD = new javax.swing.JPanel();
        DSDeleteStudent = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        DPStudentID = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        MSPDAP = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        MSPResponse = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        manageGradingItemsPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        CGICreateGradingItem = new javax.swing.JButton();
        CGIName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        CGIWeightage = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        CGIType = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        VGIViewDetails = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        VGIGIID = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        VAGIViewAllItems = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        UGIUpdateItem = new javax.swing.JButton();
        UGIName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        UGIWeightage = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        UGIType = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        UGIGIID = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        DGIDeleteItem = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        DGIGIID = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        MGIDAGI = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        MGIResponse = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        GSPoints = new javax.swing.JTextField();
        GSSubmitGrade = new javax.swing.JButton();
        GSStudentID = new javax.swing.JComboBox<>();
        GSGIID = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        GSResponse = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        GSFeedback = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        DGSID = new javax.swing.JComboBox<>();
        DGGIID = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        DGDeleteGrade = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        DGResponse = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        DAGFSResponse = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        DAGFSSID = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        DAGFSDeleteButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        DAGDeleteButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        DAGResponse = new javax.swing.JTextArea();
        jLabel28 = new javax.swing.JLabel();
        viewAppealsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VAResponse = new javax.swing.JTextArea();
        VAViewAllAppeals = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("* Enter the Student's Name");

        CSCreateStudent.setText("Create Student Profile");
        CSCreateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CSCreateStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profileCLayout = new javax.swing.GroupLayout(profileC);
        profileC.setLayout(profileCLayout);
        profileCLayout.setHorizontalGroup(
            profileCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileCLayout.createSequentialGroup()
                .addGroup(profileCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profileCLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel5))
                    .addGroup(profileCLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(profileCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CSCreateStudent)
                            .addComponent(CSStudentsName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        profileCLayout.setVerticalGroup(
            profileCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileCLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CSStudentsName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CSCreateStudent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RSStudentID.addTab("Create New Profile", profileC);

        RSViewStudent.setText("View Student Profile");
        RSViewStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RSViewStudentActionPerformed(evt);
            }
        });

        jLabel26.setText("* Select Student ID");

        javax.swing.GroupLayout profileRLayout = new javax.swing.GroupLayout(profileR);
        profileR.setLayout(profileRLayout);
        profileRLayout.setHorizontalGroup(
            profileRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileRLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(profileRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profileRLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel26))
                    .addComponent(VPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RSViewStudent))
                .addContainerGap(667, Short.MAX_VALUE))
        );
        profileRLayout.setVerticalGroup(
            profileRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileRLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RSViewStudent)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        RSStudentID.addTab("View Profile", profileR);

        MSPViewAllProfiles.setText("View All Profiles");
        MSPViewAllProfiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSPViewAllProfilesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(MSPViewAllProfiles)
                .addContainerGap(545, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(MSPViewAllProfiles)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        RSStudentID.addTab("View All Profiles", jPanel8);

        USUpdateStudent.setText("Update Student Profile");
        USUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USUpdateStudentActionPerformed(evt);
            }
        });

        jLabel15.setText("* Enter the Student's Name");

        jLabel25.setText("* Select Student ID");

        javax.swing.GroupLayout profileULayout = new javax.swing.GroupLayout(profileU);
        profileU.setLayout(profileULayout);
        profileULayout.setHorizontalGroup(
            profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileULayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(USUpdateStudent)
                    .addGroup(profileULayout.createSequentialGroup()
                        .addGroup(profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(profileULayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel25))
                            .addComponent(UPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(profileULayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel15))
                            .addComponent(UPStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(426, Short.MAX_VALUE))
        );
        profileULayout.setVerticalGroup(
            profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileULayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(profileULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profileULayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UPStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profileULayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(USUpdateStudent)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        RSStudentID.addTab("Update Profile", profileU);

        DSDeleteStudent.setText("Delete Student Profile");
        DSDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DSDeleteStudentActionPerformed(evt);
            }
        });

        jLabel24.setText("* Select Student ID");

        javax.swing.GroupLayout profileDLayout = new javax.swing.GroupLayout(profileD);
        profileD.setLayout(profileDLayout);
        profileDLayout.setHorizontalGroup(
            profileDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileDLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(profileDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profileDLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel24))
                    .addComponent(DPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DSDeleteStudent))
                .addContainerGap(654, Short.MAX_VALUE))
        );
        profileDLayout.setVerticalGroup(
            profileDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileDLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DPStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DSDeleteStudent)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        RSStudentID.addTab("Delete Profile", profileD);

        MSPDAP.setText("Delete All Profiles");
        MSPDAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSPDAPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MSPDAP)
                .addContainerGap(754, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MSPDAP)
                .addContainerGap(263, Short.MAX_VALUE))
        );

        RSStudentID.addTab("Delete All Profiles", jPanel11);

        MSPResponse.setColumns(20);
        MSPResponse.setRows(5);
        jScrollPane4.setViewportView(MSPResponse);

        jLabel7.setText("Response");

        javax.swing.GroupLayout manageStudentsProfilePanelLayout = new javax.swing.GroupLayout(manageStudentsProfilePanel);
        manageStudentsProfilePanel.setLayout(manageStudentsProfilePanelLayout);
        manageStudentsProfilePanelLayout.setHorizontalGroup(
            manageStudentsProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageStudentsProfilePanelLayout.createSequentialGroup()
                .addGroup(manageStudentsProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RSStudentID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageStudentsProfilePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );
        manageStudentsProfilePanelLayout.setVerticalGroup(
            manageStudentsProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageStudentsProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RSStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel7)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );

        gradeStuffPanel.addTab("Manage Student Profiles", manageStudentsProfilePanel);

        jLabel9.setText("* Select Grading Item's Type");

        CGICreateGradingItem.setText("Create Grading Item");
        CGICreateGradingItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CGICreateGradingItemActionPerformed(evt);
            }
        });

        jLabel10.setText("* Enter the Grading Item's Name");

        jLabel11.setText("* Enter the Grading Item's Weightage");

        CGIType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assignment", "Quiz", "Midterm Exam", "Test", "Homework", "Final Exam" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CGICreateGradingItem)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel11))
                            .addComponent(CGIWeightage)
                            .addComponent(CGIType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel9)))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel10))
                    .addComponent(CGIName, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(CGIType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CGIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CGIWeightage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(CGICreateGradingItem)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Create Grading Item", jPanel1);

        VGIViewDetails.setText("View Grading Item Details");
        VGIViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VGIViewDetailsActionPerformed(evt);
            }
        });

        jLabel22.setText("* Select Grading Item ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VGIGIID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel22))
                    .addComponent(VGIViewDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(673, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel22)
                .addGap(4, 4, 4)
                .addComponent(VGIGIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(VGIViewDetails)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("View Grading Item", jPanel2);

        VAGIViewAllItems.setText("View All Grading Items");
        VAGIViewAllItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VAGIViewAllItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(530, Short.MAX_VALUE)
                .addComponent(VAGIViewAllItems)
                .addGap(197, 197, 197))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(VAGIViewAllItems)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("View All Grading Items", jPanel7);

        UGIUpdateItem.setText("Update Grading Item");
        UGIUpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UGIUpdateItemActionPerformed(evt);
            }
        });

        jLabel16.setText("* Enter the Grading Item's Name");

        jLabel17.setText("* Select Grading Item ID");

        jLabel18.setText("* Enter Grading Item's Weightage");

        UGIType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assignment", "Quiz", "Midterm Exam", "Test", "Homework", "Final Exam" }));

        jLabel19.setText("* Select Grading Item's Type");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UGIUpdateItem)
                            .addComponent(UGIName, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel16))
                            .addComponent(UGIGIID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UGIWeightage, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)))
                    .addComponent(UGIType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(393, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(4, 4, 4)
                        .addComponent(UGIGIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(4, 4, 4)
                        .addComponent(UGIType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UGIWeightage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UGIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(UGIUpdateItem)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Update Grading Item", jPanel4);

        DGIDeleteItem.setText("Delete Grading Item");
        DGIDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DGIDeleteItemActionPerformed(evt);
            }
        });

        jLabel23.setText("* Select Grading Item ID");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel23))
                    .addComponent(DGIDeleteItem)
                    .addComponent(DGIGIID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(667, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DGIGIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DGIDeleteItem)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Delete Grading Item", jPanel5);

        MGIDAGI.setText("Delete All Grading Items");
        MGIDAGI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MGIDAGIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGIDAGI)
                .addContainerGap(713, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MGIDAGI)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Delete All Grading Items", jPanel12);

        MGIResponse.setColumns(20);
        MGIResponse.setRows(5);
        jScrollPane3.setViewportView(MGIResponse);

        jLabel6.setText("Response");

        javax.swing.GroupLayout manageGradingItemsPanelLayout = new javax.swing.GroupLayout(manageGradingItemsPanel);
        manageGradingItemsPanel.setLayout(manageGradingItemsPanelLayout);
        manageGradingItemsPanelLayout.setHorizontalGroup(
            manageGradingItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageGradingItemsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageGradingItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jTabbedPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageGradingItemsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        manageGradingItemsPanelLayout.setVerticalGroup(
            manageGradingItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageGradingItemsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );

        gradeStuffPanel.addTab("Manage Grading Items", manageGradingItemsPanel);

        jLabel1.setText("* Select Student ID");

        jLabel2.setText("* Select Grading Item");

        jLabel3.setText("* Enter the points (Max 100)");

        GSSubmitGrade.setText("Submit Grade");
        GSSubmitGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSSubmitGradeActionPerformed(evt);
            }
        });

        GSResponse.setColumns(20);
        GSResponse.setRows(5);
        jScrollPane2.setViewportView(GSResponse);

        jLabel8.setText("Response");

        jLabel12.setText("Enter the Feedback");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GSStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1)))
                        .addGap(131, 680, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GSSubmitGrade)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GSPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GSFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel12))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2))
                            .addComponent(GSGIID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(388, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GSStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GSGIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GSPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GSFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(GSSubmitGrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gradeStuffPanel.addTab("Grade Stuff", jPanel3);

        jLabel13.setText("* Select Grading Item ID");

        jLabel14.setText("* Select Student ID");

        DGDeleteGrade.setText("Delete Grade");
        DGDeleteGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DGDeleteGradeActionPerformed(evt);
            }
        });

        DGResponse.setColumns(20);
        DGResponse.setRows(5);
        jScrollPane5.setViewportView(DGResponse);

        jLabel20.setText("Response");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel14)
                .addGap(88, 88, 88)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(DGDeleteGrade))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(DGSID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DGGIID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 471, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DGGIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DGSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DGDeleteGrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gradeStuffPanel.addTab("Delete A Particular Grade", jPanel6);

        DAGFSResponse.setColumns(20);
        DAGFSResponse.setRows(5);
        jScrollPane6.setViewportView(DAGFSResponse);

        jLabel21.setText("Response");

        jLabel27.setText("* Student ID");

        DAGFSDeleteButton.setText("Delete All Grades For Student");
        DAGFSDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAGFSDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DAGFSDeleteButton)
                    .addComponent(jLabel27)
                    .addComponent(DAGFSSID, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(662, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DAGFSSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DAGFSDeleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gradeStuffPanel.addTab("Delete All Grades For Student", jPanel9);

        DAGDeleteButton.setText("Delete All Grades");
        DAGDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAGDeleteButtonActionPerformed(evt);
            }
        });

        DAGResponse.setColumns(20);
        DAGResponse.setRows(5);
        jScrollPane7.setViewportView(DAGResponse);

        jLabel28.setText("Response");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(DAGDeleteButton)
                .addContainerGap(567, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel28)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(DAGDeleteButton)
                .addGap(17, 17, 17)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gradeStuffPanel.addTab("Delete All Grades", jPanel10);

        VAResponse.setColumns(20);
        VAResponse.setRows(5);
        jScrollPane1.setViewportView(VAResponse);

        VAViewAllAppeals.setText("View All Appeals");
        VAViewAllAppeals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VAViewAllAppealsActionPerformed(evt);
            }
        });

        jLabel4.setText("Response");

        javax.swing.GroupLayout viewAppealsPanelLayout = new javax.swing.GroupLayout(viewAppealsPanel);
        viewAppealsPanel.setLayout(viewAppealsPanelLayout);
        viewAppealsPanelLayout.setHorizontalGroup(
            viewAppealsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAppealsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewAppealsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addGroup(viewAppealsPanelLayout.createSequentialGroup()
                        .addComponent(VAViewAllAppeals)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        viewAppealsPanelLayout.setVerticalGroup(
            viewAppealsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAppealsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewAppealsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(VAViewAllAppeals)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        gradeStuffPanel.addTab("View Appeals", viewAppealsPanel);

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gradeStuffPanel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Close)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Close)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gradeStuffPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VAViewAllAppealsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VAViewAllAppealsActionPerformed
        ClientResponse response = appealsClient.viewAllAppeals();
        String responseString = response.getEntity(String.class);
        StringBuilder responseOutput;
        if (!responseString.contains("studentId")) {
            responseOutput = new StringBuilder("There are no appeals to view!");
        } else {
            responseOutput = new StringBuilder("List of all appeals that have been filed:\n\n");
            JSONObject root = new JSONObject(responseString);
            JSONArray appeals = root.getJSONArray("appeals");
            for (int i = 0; i < appeals.length(); ++i) {
                JSONObject appeal = (JSONObject) appeals.get(i);
                responseOutput.append("Appeal ID : ")
                        .append(appeal.getInt("appealId"))
                        .append("\nStudent ID : ")
                        .append(appeal.getInt("studentId"))
                        .append("\nGrading Item ID : ")
                        .append(appeal.getInt("gradingItemId"))
                        .append("\nAppeal Message : ")
                        .append(appeal.getString("appealMessage"))
                        .append("\n\n");
            }
        }
        VAResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
    }//GEN-LAST:event_VAViewAllAppealsActionPerformed

    private void CGICreateGradingItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CGICreateGradingItemActionPerformed
        if (CGIType.getSelectedItem() != null && !CGIName.getText().trim().equals("")) {
            try {
                double w = Double.parseDouble(CGIWeightage.getText());
                if (w <= 0 || w > 100) {
                    MGIResponse.setText("Enter a number greater than 0 and less than or equal to 100 for weightage!");
                    return;
                }
            } catch (NumberFormatException e) {
                MGIResponse.setText("Enter a number for weightage!");
                return;
            }
            String type = CGIType.getSelectedItem().toString();
            String name = CGIName.getText();
            double weightage = Double.parseDouble(CGIWeightage.getText());
            String requestMessage = "{\n"
                    + "\"requestType\" : \"createGradingItem\",\n"
                    + "\"type\" : \"" + type + "\",\n"
                    + "\"name\" : \"" + name + "\",\n"
                    + "\"percentage\" : " + weightage + "\n"
                    + "}";
            ClientResponse response = gradingItemsClient.createGradingItem(requestMessage);

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                responseOutput.append("Message from Server: ").append("ID for new Grading Item : ")
                        .append(String.valueOf(id))
                        .append("\nLocation: ")
                        .append(response.getLocation().toString());;
            } else {
                responseOutput.append(responseString);
            }
            MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
            setGradingItemIDs();
        } else {
            MGIResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_CGICreateGradingItemActionPerformed

    private void DGIDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DGIDeleteItemActionPerformed
        if (DGIGIID.getSelectedItem() != null) {
            int gradingItemID = Integer.parseInt(DGIGIID.getSelectedItem().toString());
            ClientResponse response = gradingItemsClient.deleteGradingItem(gradingItemID);
            if (response.getStatus() != 204) {
                String responseString = response.getEntity(String.class);
                MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
            } else {
                MGIResponse.setText("Response Code: " + response.getStatus() + "\nGrading Item Deleted!");
            }
            setGradingItemIDs();
        } else {
            MGIResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_DGIDeleteItemActionPerformed

    private void CSCreateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CSCreateStudentActionPerformed
        if (!CSStudentsName.getText().trim().equals("")) {
            String studentName = CSStudentsName.getText();
            String requestMessage = "{\n"
                    + "\"requestType\" : \"createStudentProfile\",\n"
                    + "\"name\" : \"" + studentName + "\"\n"
                    + "}";
            ClientResponse response = studentProfilesClient.createStudentProfile(requestMessage);

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                responseOutput.append("Message from Server: ")
                        .append("ID for new Student Profile : ")
                        .append(String.valueOf(id))
                        .append("\nLocation: ")
                        .append(response.getLocation().toString());
            } else {
                responseOutput.append(responseString);
            }
            MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
            setStudentIDs();
        } else {
            MSPResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_CSCreateStudentActionPerformed

    private void RSViewStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RSViewStudentActionPerformed

        if (VPStudentID.getSelectedItem() != null) {
            ClientResponse response = studentProfilesClient.readStudentProfile(Integer.parseInt(VPStudentID.getSelectedItem().toString()));

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                String name = root.getString("name");
                responseOutput.append("Message from Server: \n")
                        .append("ID : ").append(String.valueOf(id))
                        .append("\nName : ").append(name);
            } else {
                responseOutput.append(responseString);
            }
            MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
        } else {
            MSPResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_RSViewStudentActionPerformed

    private void USUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USUpdateStudentActionPerformed
        if (UPStudentID.getSelectedItem() != null && !UPStudentName.getText().trim().equals("")) {
            int studentID = Integer.parseInt(UPStudentID.getSelectedItem().toString());
            String newName = UPStudentName.getText();
            String requestMessage = "{\n"
                    + "\"requestType\" : \"updateStudentProfile\",\n"
                    + "\"id\" : " + studentID + ",\n"
                    + "\"name\" : \"" + newName + "\"\n"
                    + "}";
            ClientResponse response = studentProfilesClient.updateStudentProfile(requestMessage);

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                String name = root.getString("name");
                responseOutput.append("Message from Server: Updated!\n")
                        .append("ID : ").append(String.valueOf(id))
                        .append("\nName : ").append(name);
            } else {
                responseOutput.append(responseString);
            }
            MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
        } else {
            MSPResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_USUpdateStudentActionPerformed

    private void DSDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DSDeleteStudentActionPerformed
        if (DPStudentID.getSelectedItem() != null) {
            int studentID = Integer.parseInt(DPStudentID.getSelectedItem().toString());
            ClientResponse response = studentProfilesClient.deleteStudentProfile(studentID);
            if (response.getStatus() != 204) {
                String responseString = response.getEntity(String.class);
                MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
            } else {
                MSPResponse.setText("Response Code: " + response.getStatus() + "\nStudent Profile Deleted!");
            }
            setStudentIDs();
        } else {
            MSPResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_DSDeleteStudentActionPerformed

    private void VGIViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VGIViewDetailsActionPerformed
        if (VGIGIID.getSelectedItem() != null) {
            ClientResponse response = gradingItemsClient.readGradingItem(Integer.parseInt(VGIGIID.getSelectedItem().toString()));
            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                double percentage = root.getDouble("percentage");
                String name = root.getString("name");
                String type = root.getString("type");
                responseOutput.append("Message from Server: \n")
                        .append("ID : ").append(String.valueOf(id))
                        .append("\nName : ").append(name)
                        .append("\nType : ").append(type)
                        .append("\nWeightage : ").append(percentage);
            } else {
                responseOutput.append(responseString);
            }
            MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
        } else {
            MGIResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_VGIViewDetailsActionPerformed

    private void UGIUpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UGIUpdateItemActionPerformed

        if (UGIGIID.getSelectedItem() != null && UGIType.getSelectedItem() != null && !UGIName.getText().trim().equals("")) {
            try {
                Double.parseDouble(UGIWeightage.getText());
            } catch (NumberFormatException e) {
                MGIResponse.setText("Enter a number for weightage!");
                return;
            }
            int gradingItemID = Integer.parseInt(UGIGIID.getSelectedItem().toString());
            String gradingItemType = UGIType.getSelectedItem().toString();
            String gradingItemName = UGIName.getText();
            double gradingItemWeightage = Double.parseDouble(UGIWeightage.getText());
            String requestMessage = "{\n"
                    + "\t\"requestType\" : \"updateGradingItem\",\n"
                    + "\t\"id\" : " + gradingItemID + ",\n"
                    + "\t\"type\" : \"" + gradingItemType + "\",\n"
                    + "\t\"name\" : \"" + gradingItemName + "\",\n"
                    + "\t\"percentage\" : " + gradingItemWeightage + "\n"
                    + "}";
            ClientResponse response = gradingItemsClient.updateGradingItem(requestMessage);

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                int id = root.getInt("id");
                double percentage = root.getDouble("percentage");
                String name = root.getString("name");
                String type = root.getString("type");
                responseOutput.append("Message from Server: Updated!\n")
                        .append("ID : ").append(String.valueOf(id))
                        .append("\nName : ").append(name)
                        .append("\nType : ").append(type)
                        .append("\nWeightage : ").append(percentage);
            } else {
                responseOutput.append(responseString);
            }
            MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
        } else {
            MGIResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_UGIUpdateItemActionPerformed

    private void GSSubmitGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GSSubmitGradeActionPerformed
        GSResponse.setText("");
        if (GSStudentID.getSelectedItem() != null && GSGIID.getSelectedItem() != null && !GSPoints.getText().trim().equals("")) {
            try {
                double p = Double.parseDouble(GSPoints.getText());
                if (p > 100 || p < 0) {
                    GSResponse.setText("Enter a number between 0 and 100 for points!");
                    return;
                }
            } catch (NumberFormatException e) {
                GSResponse.setText("Enter a number for points!");
                return;
            }

            int studentID = Integer.parseInt(GSStudentID.getSelectedItem().toString());
            int gradingItemID = Integer.parseInt(GSGIID.getSelectedItem().toString());
            double points = Double.parseDouble(GSPoints.getText());
            String feedback = GSFeedback.getText().trim();
            String requestMessage = "{\n"
                    + "\t\"requestType\" : \"updateGrades\",\n"
                    + "\t\"studentId\" : " + studentID + ",\n"
                    + "\t\"gradingItemId\" : " + gradingItemID + ",\n"
                    + "\t\"points\" : " + points + ",\n"
                    + "\t\"feedback\" : \"" + feedback + "\"\n"
                    + "}";
            ClientResponse response = studentProfilesClient.updateGrade(requestMessage);

            String responseString = response.getEntity(String.class);
            StringBuilder responseOutput = new StringBuilder();
            JSONObject root = new JSONObject(responseString);
            String responseType = root.getString("responseType");
            if (responseType.equals("success")) {
                responseOutput.append("Message from Server: ").append(root.getString("message"));
            } else {
                responseOutput.append(responseString);
            }
            GSResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseOutput + "\n\n");
        } else {
            GSResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_GSSubmitGradeActionPerformed

    private void DGDeleteGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DGDeleteGradeActionPerformed
        if (DGSID.getSelectedItem() != null || DGGIID.getSelectedItem() != null) {
            int studentID = Integer.parseInt(DGSID.getSelectedItem().toString());
            int gradingItemID = Integer.parseInt(DGGIID.getSelectedItem().toString());
            ClientResponse response = studentProfilesClient.deleteAGrade(studentID, gradingItemID);
            if (response.getStatus() != 204) {
                String responseString = response.getEntity(String.class);
                DGResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
            } else {
                DGResponse.setText("Response Code: " + response.getStatus() + "\nGrade Deleted!");
            }
        } else {
            DGResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_DGDeleteGradeActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    private void VAGIViewAllItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VAGIViewAllItemsActionPerformed
        ClientResponse response = gradingItemsClient.readAllGradingItems();
        MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + response.getEntity(String.class) + "\n\n");
    }//GEN-LAST:event_VAGIViewAllItemsActionPerformed

    private void MSPViewAllProfilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSPViewAllProfilesActionPerformed
        ClientResponse response = studentProfilesClient.readAllStudentProfiles();
        MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + response.getEntity(String.class) + "\n\n");
    }//GEN-LAST:event_MSPViewAllProfilesActionPerformed

    private void DAGFSDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAGFSDeleteButtonActionPerformed
        if (DAGFSSID.getSelectedItem() != null) {
            int studentID = Integer.parseInt(DGSID.getSelectedItem().toString());
            ClientResponse response = studentProfilesClient.deleteAllGradesForStudent(studentID);
            if (response.getStatus() != 204) {
                String responseString = response.getEntity(String.class);
                DAGFSResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
            } else {
                DAGFSResponse.setText("Response Code: " + response.getStatus() + "\nAll Grades Deleted for the Student!");
            }
        } else {
            DAGFSResponse.setText("Enter all the values!");
        }
    }//GEN-LAST:event_DAGFSDeleteButtonActionPerformed

    private void DAGDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAGDeleteButtonActionPerformed
        ClientResponse response = studentProfilesClient.deleteAllGrades();
        if (response.getStatus() != 204) {
            String responseString = response.getEntity(String.class);
            DAGResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
        } else {
            DAGResponse.setText("Response Code: " + response.getStatus() + "\nAll Grades Deleted for All Students!");
        }
    }//GEN-LAST:event_DAGDeleteButtonActionPerformed

    private void MSPDAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSPDAPActionPerformed
        ClientResponse response = studentProfilesClient.deleteAllStudentProfiles();
        if (response.getStatus() != 204) {
            String responseString = response.getEntity(String.class);
            MSPResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
        } else {
            MSPResponse.setText("Response Code: " + response.getStatus() + "\nAll Student Profiles Deleted!");
        }
        setStudentIDs();
    }//GEN-LAST:event_MSPDAPActionPerformed

    private void MGIDAGIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MGIDAGIActionPerformed
        ClientResponse response = gradingItemsClient.deleteAllGradingItems();
        if (response.getStatus() != 204) {
            String responseString = response.getEntity(String.class);
            MGIResponse.setText("Response Code - " + response.getStatus() + "\n\n" + responseString + "\n\n");
        } else {
            MGIResponse.setText("Response Code: " + response.getStatus() + "\nAll Grading Items Deleted!");
        }
        setGradingItemIDs();
    }//GEN-LAST:event_MGIDAGIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstructorUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CGICreateGradingItem;
    private javax.swing.JTextField CGIName;
    private javax.swing.JComboBox<String> CGIType;
    private javax.swing.JTextField CGIWeightage;
    private javax.swing.JButton CSCreateStudent;
    private javax.swing.JTextField CSStudentsName;
    private javax.swing.JButton Close;
    private javax.swing.JButton DAGDeleteButton;
    private javax.swing.JButton DAGFSDeleteButton;
    private javax.swing.JTextArea DAGFSResponse;
    private javax.swing.JComboBox<String> DAGFSSID;
    private javax.swing.JTextArea DAGResponse;
    private javax.swing.JButton DGDeleteGrade;
    private javax.swing.JComboBox<String> DGGIID;
    private javax.swing.JButton DGIDeleteItem;
    private javax.swing.JComboBox<String> DGIGIID;
    private javax.swing.JTextArea DGResponse;
    private javax.swing.JComboBox<String> DGSID;
    private javax.swing.JComboBox<String> DPStudentID;
    private javax.swing.JButton DSDeleteStudent;
    private javax.swing.JTextField GSFeedback;
    private javax.swing.JComboBox<String> GSGIID;
    private javax.swing.JTextField GSPoints;
    private javax.swing.JTextArea GSResponse;
    private javax.swing.JComboBox<String> GSStudentID;
    private javax.swing.JButton GSSubmitGrade;
    private javax.swing.JButton MGIDAGI;
    private javax.swing.JTextArea MGIResponse;
    private javax.swing.JButton MSPDAP;
    private javax.swing.JTextArea MSPResponse;
    private javax.swing.JButton MSPViewAllProfiles;
    private javax.swing.JTabbedPane RSStudentID;
    private javax.swing.JButton RSViewStudent;
    private javax.swing.JComboBox<String> UGIGIID;
    private javax.swing.JTextField UGIName;
    private javax.swing.JComboBox<String> UGIType;
    private javax.swing.JButton UGIUpdateItem;
    private javax.swing.JTextField UGIWeightage;
    private javax.swing.JComboBox<String> UPStudentID;
    private javax.swing.JTextField UPStudentName;
    private javax.swing.JButton USUpdateStudent;
    private javax.swing.JButton VAGIViewAllItems;
    private javax.swing.JTextArea VAResponse;
    private javax.swing.JButton VAViewAllAppeals;
    private javax.swing.JComboBox<String> VGIGIID;
    private javax.swing.JButton VGIViewDetails;
    private javax.swing.JComboBox<String> VPStudentID;
    private javax.swing.JTabbedPane gradeStuffPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel manageGradingItemsPanel;
    private javax.swing.JPanel manageStudentsProfilePanel;
    private javax.swing.JPanel profileC;
    private javax.swing.JPanel profileD;
    private javax.swing.JPanel profileR;
    private javax.swing.JPanel profileU;
    private javax.swing.JPanel viewAppealsPanel;
    // End of variables declaration//GEN-END:variables
    StudentProfilesClient studentProfilesClient;
    GradingItemsClient gradingItemsClient;
    AppealsClient appealsClient;

    private void customInitComponents() {
        studentProfilesClient = new StudentProfilesClient();
        gradingItemsClient = new GradingItemsClient();
        appealsClient = new AppealsClient();
        setGradingItemIDs();
        setStudentIDs();
    }

    private void setGradingItemIDs() {
        String gradingItemIDs = gradingItemsClient.getAllGradingItemIDs();
        Integer[] allGradingItemIDs = convertStringToArray(gradingItemIDs);
        VGIGIID.setModel(new DefaultComboBoxModel((Object[]) allGradingItemIDs));
        UGIGIID.setModel(new DefaultComboBoxModel((Object[]) allGradingItemIDs));
        DGIGIID.setModel(new DefaultComboBoxModel((Object[]) allGradingItemIDs));
        GSGIID.setModel(new DefaultComboBoxModel((Object[]) allGradingItemIDs));
        DGGIID.setModel(new DefaultComboBoxModel((Object[]) allGradingItemIDs));
    }

    private void setStudentIDs() {
        String studentIDs = studentProfilesClient.getAllStudentIDs();
        Integer[] allStudentIDs = convertStringToArray(studentIDs);
        VPStudentID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
        UPStudentID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
        DPStudentID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
        GSStudentID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
        DGSID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
        DAGFSSID.setModel(new DefaultComboBoxModel((Object[]) allStudentIDs));
    }

    private Integer[] convertStringToArray(String input) {
        input = input.substring(1, input.length() - 1);
        if (input.equals("")) {
            return new Integer[]{};
        } else if (!input.contains(",")) {
            return new Integer[]{Integer.parseInt(input)};
        } else {
            String[] parts = input.split(",");
            List<Integer> list = new ArrayList<>();
            for (String s : parts) {
                list.add(Integer.parseInt(s.trim()));
            }
            Object[] objectArray = list.toArray();
            Integer[] integerArray = Arrays.copyOf(objectArray, objectArray.length, Integer[].class);
            return integerArray;
        }
    }

}
